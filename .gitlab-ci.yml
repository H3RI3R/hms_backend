stages:
  - clone
  - build
  - deploy
  - run

variables:
  JAR_NAME: "HMSystem-0.0.1-SNAPSHOT.jar"
  GIT_REPO: "gitlab.com/hotel-management-system7750104/hms-backend.git"  # Removed 'https://'
  GIT_USERNAME: "girjesh1"
  GIT_PASSWORD: "$CI_JOB_TOKEN"  # or you can use a CI secret variable for password

before_script:
  - apt-get update && apt-get install -y maven sshpass git

clone:
  stage: clone
  script:
    - echo "Cloning repository..."
    # - mkdir -p /mnt/vol1/HMS  # Ensure the directory exists
    - cd /mnt/vol1/HMS  # Change to your desired clone path
    - sshpass -p "$GIT_PASSWORD" git clone https://$GIT_USERNAME:$GIT_PASSWORD@$GIT_REPO  # Correct URL

build:
  stage: build
  script:
    - cd /mnt/vol1/HMS/hms-backend  # Change into the cloned repository folder
    - mvn clean package -DskipTests
    - if [ -f target/$JAR_NAME ]; then echo "JAR file found"; else echo "JAR file not found"; exit 1; fi
  artifacts:
    paths:
      - /mnt/vol1/HMS/hms-backend/target/$JAR_NAME  # Preserve the JAR file for the next stage
    expire_in: 30m  # Store for 30 minutes (adjust as needed)

deploy:
  stage: deploy
  script:
    - echo "JAR Name: $JAR_NAME"
    - ls -l /mnt/vol1/HMS/hms-backend/target/
    - if [ -d "/mnt/vol1" ]; then echo "/mnt/vol1 exists and is a directory"; else echo "/mnt/vol1 is missing or is a file"; exit 1; fi
    - mv /mnt/vol1/HMS/hms-backend/target/$JAR_NAME /mnt/vol1/$JAR_NAME
    - ls -l /mnt/vol1/

run:
  stage: run
  script:
    - java -jar /mnt/vol1/$JAR_NAME
